# Generated by Django 5.2 on 2025-06-13 16:58

import accounts.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(max_length=150, verbose_name='First name')),
                ('last_name', models.CharField(max_length=150, verbose_name='Last name')),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be in format: '+999999999'. Max 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone number')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of birth')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified')),
                ('verification_code', models.CharField(blank=True, max_length=6, null=True)),
                ('verification_code_created', models.DateTimeField(blank=True, null=True)),
                ('reset_code', models.CharField(blank=True, max_length=6, null=True)),
                ('reset_code_created', models.DateTimeField(blank=True, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=accounts.models.user_avatar_path, verbose_name='Avatar')),
                ('role', models.CharField(choices=[('student', 'Student'), ('teacher', 'Teacher'), ('moderator', 'Moderator'), ('manager', 'Manager')], default='student', max_length=20, verbose_name='User Role')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('bio', models.TextField(blank=True, verbose_name='Biography')),
                ('education_level', models.CharField(blank=True, max_length=50, verbose_name='Education Level')),
                ('institution', models.CharField(blank=True, max_length=200, verbose_name='Institution')),
                ('field_of_study', models.CharField(blank=True, max_length=200, verbose_name='Field of Study')),
                ('teaching_experience', models.PositiveIntegerField(blank=True, null=True, verbose_name='Years of Teaching Experience')),
                ('expertise_areas', models.TextField(blank=True, verbose_name='Areas of Expertise')),
                ('certifications', models.TextField(blank=True, verbose_name='Professional Certifications')),
                ('learning_goals', models.TextField(blank=True, verbose_name='Learning Goals')),
                ('preferred_language', models.CharField(default='en', max_length=10, verbose_name='Preferred Language')),
                ('time_zone', models.CharField(default='UTC', max_length=50, verbose_name='Time Zone')),
                ('address', models.TextField(blank=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='State/Province')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='Postal Code')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Country')),
                ('courses_completed', models.PositiveIntegerField(default=0, verbose_name='Courses Completed')),
                ('total_study_hours', models.PositiveIntegerField(default=0, verbose_name='Total Study Hours')),
                ('points_earned', models.PositiveIntegerField(default=0, verbose_name='Points Earned')),
                ('linkedin_url', models.URLField(blank=True, verbose_name='LinkedIn Profile')),
                ('github_url', models.URLField(blank=True, verbose_name='GitHub Profile')),
                ('website_url', models.URLField(blank=True, verbose_name='Personal Website')),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
    ]
